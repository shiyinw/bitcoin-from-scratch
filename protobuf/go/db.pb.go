// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db.proto

package blockdb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VerifyResponse_Results int32

const (
	VerifyResponse_FAILED    VerifyResponse_Results = 0
	VerifyResponse_PENDING   VerifyResponse_Results = 1
	VerifyResponse_SUCCEEDED VerifyResponse_Results = 2
)

var VerifyResponse_Results_name = map[int32]string{
	0: "FAILED",
	1: "PENDING",
	2: "SUCCEEDED",
}

var VerifyResponse_Results_value = map[string]int32{
	"FAILED":    0,
	"PENDING":   1,
	"SUCCEEDED": 2,
}

func (x VerifyResponse_Results) String() string {
	return proto.EnumName(VerifyResponse_Results_name, int32(x))
}

func (VerifyResponse_Results) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{6, 0}
}

type Transaction_Types int32

const (
	Transaction_UNKNOWN   Transaction_Types = 0
	Transaction_BROADCAST Transaction_Types = 4
	Transaction_TRANSFER  Transaction_Types = 5
)

var Transaction_Types_name = map[int32]string{
	0: "UNKNOWN",
	4: "BROADCAST",
	5: "TRANSFER",
}

var Transaction_Types_value = map[string]int32{
	"UNKNOWN":   0,
	"BROADCAST": 4,
	"TRANSFER":  5,
}

func (x Transaction_Types) String() string {
	return proto.EnumName(Transaction_Types_name, int32(x))
}

func (Transaction_Types) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{8, 0}
}

type IntegerResponse struct {
	Number               int32    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntegerResponse) Reset()         { *m = IntegerResponse{} }
func (m *IntegerResponse) String() string { return proto.CompactTextString(m) }
func (*IntegerResponse) ProtoMessage()    {}
func (*IntegerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{0}
}

func (m *IntegerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegerResponse.Unmarshal(m, b)
}
func (m *IntegerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegerResponse.Marshal(b, m, deterministic)
}
func (m *IntegerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegerResponse.Merge(m, src)
}
func (m *IntegerResponse) XXX_Size() int {
	return xxx_messageInfo_IntegerResponse.Size(m)
}
func (m *IntegerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IntegerResponse proto.InternalMessageInfo

func (m *IntegerResponse) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type GetBlockRequest struct {
	BlockHash            string   `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{1}
}

func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(m, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type GetRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetResponse struct {
	Value                int32    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{3}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type GetHeightResponse struct {
	Height               int32    `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	LeafHash             string   `protobuf:"bytes,2,opt,name=LeafHash,proto3" json:"LeafHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHeightResponse) Reset()         { *m = GetHeightResponse{} }
func (m *GetHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetHeightResponse) ProtoMessage()    {}
func (*GetHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{4}
}

func (m *GetHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHeightResponse.Unmarshal(m, b)
}
func (m *GetHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHeightResponse.Marshal(b, m, deterministic)
}
func (m *GetHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHeightResponse.Merge(m, src)
}
func (m *GetHeightResponse) XXX_Size() int {
	return xxx_messageInfo_GetHeightResponse.Size(m)
}
func (m *GetHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHeightResponse proto.InternalMessageInfo

func (m *GetHeightResponse) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetHeightResponse) GetLeafHash() string {
	if m != nil {
		return m.LeafHash
	}
	return ""
}

type BooleanResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BooleanResponse) Reset()         { *m = BooleanResponse{} }
func (m *BooleanResponse) String() string { return proto.CompactTextString(m) }
func (*BooleanResponse) ProtoMessage()    {}
func (*BooleanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{5}
}

func (m *BooleanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooleanResponse.Unmarshal(m, b)
}
func (m *BooleanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooleanResponse.Marshal(b, m, deterministic)
}
func (m *BooleanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooleanResponse.Merge(m, src)
}
func (m *BooleanResponse) XXX_Size() int {
	return xxx_messageInfo_BooleanResponse.Size(m)
}
func (m *BooleanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BooleanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BooleanResponse proto.InternalMessageInfo

func (m *BooleanResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type VerifyResponse struct {
	Result               VerifyResponse_Results `protobuf:"varint,1,opt,name=Result,proto3,enum=blockdb.VerifyResponse_Results" json:"Result,omitempty"`
	BlockHash            string                 `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *VerifyResponse) Reset()         { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()    {}
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{6}
}

func (m *VerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyResponse.Unmarshal(m, b)
}
func (m *VerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyResponse.Marshal(b, m, deterministic)
}
func (m *VerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyResponse.Merge(m, src)
}
func (m *VerifyResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyResponse.Size(m)
}
func (m *VerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyResponse proto.InternalMessageInfo

func (m *VerifyResponse) GetResult() VerifyResponse_Results {
	if m != nil {
		return m.Result
	}
	return VerifyResponse_FAILED
}

func (m *VerifyResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{7}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type Transaction struct {
	Type                 Transaction_Types `protobuf:"varint,1,opt,name=Type,proto3,enum=blockdb.Transaction_Types" json:"Type,omitempty"`
	FromID               string            `protobuf:"bytes,3,opt,name=FromID,proto3" json:"FromID,omitempty"`
	ToID                 string            `protobuf:"bytes,4,opt,name=ToID,proto3" json:"ToID,omitempty"`
	Value                int32             `protobuf:"varint,5,opt,name=Value,proto3" json:"Value,omitempty"`
	MiningFee            int32             `protobuf:"varint,6,opt,name=MiningFee,proto3" json:"MiningFee,omitempty"`
	UUID                 string            `protobuf:"bytes,7,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{8}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetType() Transaction_Types {
	if m != nil {
		return m.Type
	}
	return Transaction_UNKNOWN
}

func (m *Transaction) GetFromID() string {
	if m != nil {
		return m.FromID
	}
	return ""
}

func (m *Transaction) GetToID() string {
	if m != nil {
		return m.ToID
	}
	return ""
}

func (m *Transaction) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction) GetMiningFee() int32 {
	if m != nil {
		return m.MiningFee
	}
	return 0
}

func (m *Transaction) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type JsonBlockString struct {
	Json                 string   `protobuf:"bytes,1,opt,name=Json,proto3" json:"Json,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JsonBlockString) Reset()         { *m = JsonBlockString{} }
func (m *JsonBlockString) String() string { return proto.CompactTextString(m) }
func (*JsonBlockString) ProtoMessage()    {}
func (*JsonBlockString) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{9}
}

func (m *JsonBlockString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JsonBlockString.Unmarshal(m, b)
}
func (m *JsonBlockString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JsonBlockString.Marshal(b, m, deterministic)
}
func (m *JsonBlockString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JsonBlockString.Merge(m, src)
}
func (m *JsonBlockString) XXX_Size() int {
	return xxx_messageInfo_JsonBlockString.Size(m)
}
func (m *JsonBlockString) XXX_DiscardUnknown() {
	xxx_messageInfo_JsonBlockString.DiscardUnknown(m)
}

var xxx_messageInfo_JsonBlockString proto.InternalMessageInfo

func (m *JsonBlockString) GetJson() string {
	if m != nil {
		return m.Json
	}
	return ""
}

type Block struct {
	BlockID              int32          `protobuf:"varint,1,opt,name=BlockID,proto3" json:"BlockID,omitempty"`
	PrevHash             string         `protobuf:"bytes,2,opt,name=PrevHash,proto3" json:"PrevHash,omitempty"`
	Transactions         []*Transaction `protobuf:"bytes,3,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	MinerID              string         `protobuf:"bytes,4,opt,name=MinerID,proto3" json:"MinerID,omitempty"`
	Nonce                string         `protobuf:"bytes,5,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_8817812184a13374, []int{10}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetBlockID() int32 {
	if m != nil {
		return m.BlockID
	}
	return 0
}

func (m *Block) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Block) GetMinerID() string {
	if m != nil {
		return m.MinerID
	}
	return ""
}

func (m *Block) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func init() {
	proto.RegisterEnum("blockdb.VerifyResponse_Results", VerifyResponse_Results_name, VerifyResponse_Results_value)
	proto.RegisterEnum("blockdb.Transaction_Types", Transaction_Types_name, Transaction_Types_value)
	proto.RegisterType((*IntegerResponse)(nil), "blockdb.IntegerResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "blockdb.GetBlockRequest")
	proto.RegisterType((*GetRequest)(nil), "blockdb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "blockdb.GetResponse")
	proto.RegisterType((*GetHeightResponse)(nil), "blockdb.GetHeightResponse")
	proto.RegisterType((*BooleanResponse)(nil), "blockdb.BooleanResponse")
	proto.RegisterType((*VerifyResponse)(nil), "blockdb.VerifyResponse")
	proto.RegisterType((*Null)(nil), "blockdb.Null")
	proto.RegisterType((*Transaction)(nil), "blockdb.Transaction")
	proto.RegisterType((*JsonBlockString)(nil), "blockdb.JsonBlockString")
	proto.RegisterType((*Block)(nil), "blockdb.Block")
}

func init() { proto.RegisterFile("db.proto", fileDescriptor_8817812184a13374) }

var fileDescriptor_8817812184a13374 = []byte{
	// 691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xed, 0x4e, 0xdb, 0x4a,
	0x10, 0x75, 0xbe, 0x1c, 0x67, 0x02, 0xc4, 0x77, 0x2f, 0xe2, 0x5a, 0x16, 0xd2, 0x45, 0xdb, 0x56,
	0x02, 0x55, 0x72, 0x45, 0x2a, 0xb5, 0x54, 0xea, 0x8f, 0x26, 0x71, 0x12, 0x4c, 0xc1, 0x44, 0x9b,
	0x84, 0xfe, 0x76, 0xc2, 0x92, 0x58, 0x0d, 0x36, 0xf5, 0xda, 0x95, 0x78, 0x95, 0xbe, 0x40, 0x1f,
	0xa1, 0xef, 0xd4, 0xa7, 0xa8, 0x76, 0xd7, 0x76, 0x9c, 0x08, 0xd4, 0x7f, 0x7b, 0xc6, 0x67, 0x67,
	0x8e, 0xcf, 0xcc, 0x0e, 0x68, 0xb7, 0x33, 0xeb, 0x21, 0x0a, 0xe3, 0x10, 0xd5, 0x67, 0xab, 0x70,
	0xfe, 0xf5, 0x76, 0x86, 0x4f, 0xa0, 0xe5, 0x04, 0x31, 0x5d, 0xd0, 0x88, 0x50, 0xf6, 0x10, 0x06,
	0x8c, 0xa2, 0x03, 0x50, 0xdd, 0xe4, 0x7e, 0x46, 0x23, 0xa3, 0x74, 0x54, 0x3a, 0xae, 0x91, 0x14,
	0xe1, 0x37, 0xd0, 0x1a, 0xd2, 0xb8, 0xcb, 0x2f, 0x12, 0xfa, 0x2d, 0xa1, 0x2c, 0x46, 0x87, 0xd0,
	0x10, 0xf8, 0xdc, 0x63, 0x4b, 0xc1, 0x6e, 0x90, 0x75, 0x00, 0xbf, 0x04, 0x18, 0xd2, 0x38, 0xe3,
	0x1e, 0x80, 0x3a, 0x65, 0x34, 0x72, 0xec, 0x94, 0x98, 0x22, 0xfc, 0x02, 0x9a, 0x82, 0x95, 0x56,
	0xdf, 0x87, 0xda, 0x8d, 0xb7, 0x4a, 0x68, 0x5a, 0x5c, 0x02, 0x3c, 0x84, 0x7f, 0x86, 0x34, 0x3e,
	0xa7, 0xfe, 0x62, 0x19, 0x17, 0x85, 0xca, 0x48, 0x26, 0x54, 0x22, 0x64, 0x82, 0x76, 0x49, 0xbd,
	0x3b, 0x21, 0xaa, 0x2c, 0x6a, 0xe5, 0x18, 0xbf, 0x86, 0x56, 0x37, 0x0c, 0x57, 0xd4, 0x0b, 0xf2,
	0x34, 0x06, 0xd4, 0xc7, 0xc9, 0x7c, 0x4e, 0x19, 0x13, 0x79, 0x34, 0x92, 0x41, 0xfc, 0xa3, 0x04,
	0x7b, 0x37, 0x34, 0xf2, 0xef, 0x1e, 0x73, 0xf2, 0x7b, 0x50, 0x09, 0x65, 0xc9, 0x4a, 0xd6, 0xdc,
	0x6b, 0xff, 0x6f, 0xa5, 0x4e, 0x5a, 0x9b, 0x44, 0x4b, 0xb2, 0x18, 0x49, 0xe9, 0x9b, 0x56, 0x95,
	0xb7, 0xad, 0x3a, 0x85, 0x7a, 0x7a, 0x01, 0x01, 0xa8, 0x83, 0x8e, 0x73, 0xd9, 0xb7, 0x75, 0x05,
	0x35, 0xa1, 0x3e, 0xea, 0xbb, 0xb6, 0xe3, 0x0e, 0xf5, 0x12, 0xda, 0x85, 0xc6, 0x78, 0xda, 0xeb,
	0xf5, 0xfb, 0x76, 0xdf, 0xd6, 0xcb, 0x58, 0x85, 0xaa, 0x9b, 0xac, 0x56, 0xf8, 0x77, 0x09, 0x9a,
	0x93, 0xc8, 0x0b, 0x98, 0x37, 0x8f, 0xfd, 0x30, 0x40, 0x16, 0x54, 0x27, 0x8f, 0x0f, 0x34, 0xd5,
	0x67, 0xe6, 0xfa, 0x0a, 0x1c, 0x8b, 0x13, 0x18, 0x11, 0x3c, 0xee, 0xe2, 0x20, 0x0a, 0xef, 0x1d,
	0xdb, 0xa8, 0xc8, 0xbe, 0x48, 0x84, 0x10, 0x54, 0x27, 0xa1, 0x63, 0x1b, 0x55, 0x11, 0x15, 0xe7,
	0x75, 0x73, 0x6a, 0x85, 0xe6, 0xf0, 0x5f, 0xbb, 0xf2, 0x03, 0x3f, 0x58, 0x0c, 0x28, 0x35, 0x54,
	0xf1, 0x65, 0x1d, 0xe0, 0x79, 0xa6, 0x53, 0xc7, 0x36, 0xea, 0x32, 0x0f, 0x3f, 0xe3, 0x53, 0xa8,
	0x09, 0x09, 0xfc, 0x07, 0xa7, 0xee, 0x67, 0xf7, 0xfa, 0x8b, 0xab, 0x2b, 0xfc, 0x07, 0xbb, 0xe4,
	0xba, 0x63, 0xf7, 0x3a, 0xe3, 0x89, 0x5e, 0x45, 0x3b, 0xa0, 0x4d, 0x48, 0xc7, 0x1d, 0x0f, 0xfa,
	0x44, 0xaf, 0x5d, 0x54, 0xb5, 0xb2, 0x5e, 0xc1, 0xaf, 0xa0, 0x75, 0xc1, 0xc2, 0x40, 0x18, 0x37,
	0x8e, 0x23, 0x3f, 0x58, 0xf0, 0xfc, 0x3c, 0x94, 0x4e, 0x95, 0x38, 0xe3, 0x9f, 0x25, 0xa8, 0x09,
	0x0e, 0x6f, 0xae, 0x38, 0xa4, 0x63, 0x57, 0x23, 0x19, 0xe4, 0x53, 0x32, 0x8a, 0xe8, 0xf7, 0xe2,
	0x94, 0x64, 0x18, 0x9d, 0xc1, 0x4e, 0xc1, 0x2e, 0x66, 0x54, 0x8e, 0x2a, 0xc7, 0xcd, 0xf6, 0xfe,
	0x53, 0x5e, 0x92, 0x0d, 0x26, 0xaf, 0x77, 0xe5, 0x07, 0x62, 0xcc, 0xa5, 0x71, 0x19, 0xe4, 0xde,
	0xb9, 0x61, 0x30, 0x97, 0xde, 0x35, 0x88, 0x04, 0xed, 0x5f, 0x15, 0x68, 0x09, 0x45, 0xbd, 0xa5,
	0xe7, 0x07, 0x82, 0x8b, 0xda, 0x50, 0x19, 0xd2, 0x18, 0xfd, 0x9b, 0x97, 0x5b, 0xbf, 0x22, 0x73,
	0x7f, 0x33, 0x28, 0x87, 0x0d, 0x2b, 0xe8, 0x23, 0x68, 0x42, 0xc7, 0x1d, 0x8d, 0xd0, 0x93, 0x3a,
	0x4d, 0x23, 0x8f, 0x6e, 0x3d, 0x00, 0xac, 0xa0, 0x0f, 0xa0, 0xca, 0xf1, 0x7d, 0xe6, 0xee, 0x7f,
	0xcf, 0x4c, 0x39, 0x56, 0xd0, 0x19, 0x34, 0xf2, 0x97, 0x89, 0x76, 0x73, 0x1e, 0x1f, 0x4d, 0xd3,
	0x2c, 0x8a, 0xdd, 0x7c, 0xbc, 0x58, 0x41, 0x9f, 0x40, 0xcb, 0xf6, 0x09, 0x32, 0x8a, 0xcc, 0xe2,
	0x8a, 0x29, 0xc8, 0xde, 0x6a, 0x3c, 0x56, 0xd0, 0x3b, 0x68, 0x8c, 0x12, 0xb6, 0xdc, 0x4e, 0xb1,
	0x45, 0x34, 0x37, 0x55, 0x61, 0x05, 0xf5, 0xa0, 0xc5, 0xef, 0x15, 0x5f, 0xcd, 0xdf, 0x3c, 0xdb,
	0x5a, 0x92, 0x58, 0xe9, 0x9e, 0xc0, 0xa1, 0xef, 0xfb, 0xcc, 0x62, 0x8f, 0x2c, 0xa6, 0xf7, 0xcc,
	0x0a, 0x99, 0x24, 0xcf, 0x79, 0x23, 0x6f, 0x67, 0xdd, 0xba, 0xdd, 0x1d, 0xf1, 0x5d, 0x3b, 0x2a,
	0xcd, 0x54, 0xb1, 0x74, 0xdf, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x9c, 0xae, 0x97, 0x80,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlockChainMinerClient is the client API for BlockChainMiner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockChainMinerClient interface {
	// Return UserID's Balance on the Chain, after considering the latest valid block. Pending transactions have no effect on Get()
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// Receive and Broadcast Transaction: balance[FromID]-=Value, balance[ToID]+=(Value-MiningFee), balance[MinerID]+=MiningFee
	// Return Success=false if FromID is same as ToID or latest balance of FromID is insufficient
	Transfer(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*BooleanResponse, error)
	// Check if a transaction has been written into a block, or is still waiting, or is invalid on the longest branch.
	Verify(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*VerifyResponse, error)
	// Get the current blockchain length; use the longest branch if multiple branch exist.
	GetHeight(ctx context.Context, in *Null, opts ...grpc.CallOption) (*GetHeightResponse, error)
	// Get the Json representation of the block with BlockHash hash value
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*JsonBlockString, error)
	// Send a block to another server
	PushBlock(ctx context.Context, in *JsonBlockString, opts ...grpc.CallOption) (*Null, error)
	// Send a transaction to another server
	PushTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*IntegerResponse, error)
}

type blockChainMinerClient struct {
	cc grpc.ClientConnInterface
}

func NewBlockChainMinerClient(cc grpc.ClientConnInterface) BlockChainMinerClient {
	return &blockChainMinerClient{cc}
}

func (c *blockChainMinerClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainMinerClient) Transfer(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*BooleanResponse, error) {
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainMinerClient) Verify(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainMinerClient) GetHeight(ctx context.Context, in *Null, opts ...grpc.CallOption) (*GetHeightResponse, error) {
	out := new(GetHeightResponse)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/GetHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainMinerClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*JsonBlockString, error) {
	out := new(JsonBlockString)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainMinerClient) PushBlock(ctx context.Context, in *JsonBlockString, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/PushBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainMinerClient) PushTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*IntegerResponse, error) {
	out := new(IntegerResponse)
	err := c.cc.Invoke(ctx, "/blockdb.BlockChainMiner/PushTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockChainMinerServer is the server API for BlockChainMiner service.
type BlockChainMinerServer interface {
	// Return UserID's Balance on the Chain, after considering the latest valid block. Pending transactions have no effect on Get()
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// Receive and Broadcast Transaction: balance[FromID]-=Value, balance[ToID]+=(Value-MiningFee), balance[MinerID]+=MiningFee
	// Return Success=false if FromID is same as ToID or latest balance of FromID is insufficient
	Transfer(context.Context, *Transaction) (*BooleanResponse, error)
	// Check if a transaction has been written into a block, or is still waiting, or is invalid on the longest branch.
	Verify(context.Context, *Transaction) (*VerifyResponse, error)
	// Get the current blockchain length; use the longest branch if multiple branch exist.
	GetHeight(context.Context, *Null) (*GetHeightResponse, error)
	// Get the Json representation of the block with BlockHash hash value
	GetBlock(context.Context, *GetBlockRequest) (*JsonBlockString, error)
	// Send a block to another server
	PushBlock(context.Context, *JsonBlockString) (*Null, error)
	// Send a transaction to another server
	PushTransaction(context.Context, *Transaction) (*IntegerResponse, error)
}

// UnimplementedBlockChainMinerServer can be embedded to have forward compatible implementations.
type UnimplementedBlockChainMinerServer struct {
}

func (*UnimplementedBlockChainMinerServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBlockChainMinerServer) Transfer(ctx context.Context, req *Transaction) (*BooleanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Transfer not implemented")
}
func (*UnimplementedBlockChainMinerServer) Verify(ctx context.Context, req *Transaction) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}
func (*UnimplementedBlockChainMinerServer) GetHeight(ctx context.Context, req *Null) (*GetHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHeight not implemented")
}
func (*UnimplementedBlockChainMinerServer) GetBlock(ctx context.Context, req *GetBlockRequest) (*JsonBlockString, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedBlockChainMinerServer) PushBlock(ctx context.Context, req *JsonBlockString) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushBlock not implemented")
}
func (*UnimplementedBlockChainMinerServer) PushTransaction(ctx context.Context, req *Transaction) (*IntegerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushTransaction not implemented")
}

func RegisterBlockChainMinerServer(s *grpc.Server, srv BlockChainMinerServer) {
	s.RegisterService(&_BlockChainMiner_serviceDesc, srv)
}

func _BlockChainMiner_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChainMiner_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).Transfer(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChainMiner_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).Verify(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChainMiner_GetHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).GetHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/GetHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).GetHeight(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChainMiner_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChainMiner_PushBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JsonBlockString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).PushBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/PushBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).PushBlock(ctx, req.(*JsonBlockString))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChainMiner_PushTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainMinerServer).PushTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockdb.BlockChainMiner/PushTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainMinerServer).PushTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockChainMiner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockdb.BlockChainMiner",
	HandlerType: (*BlockChainMinerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _BlockChainMiner_Get_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _BlockChainMiner_Transfer_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _BlockChainMiner_Verify_Handler,
		},
		{
			MethodName: "GetHeight",
			Handler:    _BlockChainMiner_GetHeight_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BlockChainMiner_GetBlock_Handler,
		},
		{
			MethodName: "PushBlock",
			Handler:    _BlockChainMiner_PushBlock_Handler,
		},
		{
			MethodName: "PushTransaction",
			Handler:    _BlockChainMiner_PushTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "db.proto",
}
